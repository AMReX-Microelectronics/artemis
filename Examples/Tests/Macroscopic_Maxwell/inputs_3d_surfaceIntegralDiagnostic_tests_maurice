# This test case is for verifying reduced diagnostics to calculate surface/volume integrals on the Y-plane in the same domain and cell sizes as the Maurice's circuit. (use USE_LLG=FALSE, ie., no M field) 
# For simplicity, Efield is simulated in a vacuum and initialized on each cells to be equal to 1.
# The diagnostic function correctly calculates the Ez field.

################################
####### GENERAL PARAMETERS ######
#################################
max_step = 10
amr.n_cell = n_cellx n_celly n_cellz

amr.max_grid_size = 400
amr.blocking_factor = 2
geometry.dims = 3
geometry.prob_lo = -Lx/2. 0. 0.
geometry.prob_hi =  Lx/2. Ly Lz
boundary.field_lo = periodic periodic periodic
boundary.field_hi = periodic periodic periodic
amr.max_level = 0

# domain size
my_constants.n_cellx = 200
my_constants.n_celly = 60
my_constants.n_cellz = 400

# grid spacing
my_constants.Lx = 4.e-6
my_constants.Ly = 6.e-6
my_constants.Lz = 4.e-6
my_constants.tiny = 1.e-12
my_constants.dx = Lx/n_cellx
my_constants.dy = Ly/n_celly
my_constants.dz = Lz/n_cellz

# waveguide port parameters
###############
my_constants.w_port = 2.e-6
my_constants.h_port = 2.e-6

#################################
############ NUMERICS ###########
#################################
warpx.verbose = 1
warpx.use_filter = 0
warpx.cfl = 0.9
my_constants.sigma = 0.
my_constants.eps_r = 1.0
my_constants.mu_r = 1.0

algo.em_solver_medium = macroscopic # vacuum/macroscopic
algo.macroscopic_sigma_method = laxwendroff # laxwendroff or backwardeuler
macroscopic.sigma_function(x,y,z) = "sigma"
macroscopic.epsilon_function(x,y,z) = "8.8541878128e-12*eps_r"
macroscopic.mu_function(x,y,z) = "1.25663706212e-06*mu_r"

#################################
############ FIELDS #############
#################################

my_constants.pi = 3.14159265359
my_constants.c = 299792458.

warpx.E_ext_grid_init_style = parse_E_ext_grid_function
warpx.Ez_external_grid_function(x,y,z) = "1"
warpx.Ex_external_grid_function(x,y,z) = "1"
warpx.Ey_external_grid_function(x,y,z) = "1"

warpx.B_ext_grid_init_style = parse_B_ext_grid_function
warpx.Bx_external_grid_function(x,y,z)= "0."
warpx.By_external_grid_function(x,y,z)= "0."
warpx.Bz_external_grid_function(x,y,z) = "0."

# Diagnostics
diagnostics.diags_names = plt chk
plt.intervals = 10
plt.fields_to_plot = Ex Ey Ez Bx By Bz
plt.diag_type = Full

chk.format = checkpoint
chk.intervals = 100
chk.diag_type = Full



######################### Surface Integral on the Y-Plane #############################
my_constants.eps=1.e-9

warpx.reduced_diags_names = Int_yInputPlane 
Int_yInputPlane.type = RawEFieldReduction
Int_yInputPlane.reduction_type = integral
Int_yInputPlane.integration_type = surface
Int_yInputPlane.intervals = 1
Int_yInputPlane.surface_normal = Y
my_constants.YInputPlaneLoc=2*dy #Nodes aligned with Y

#select entire input port similar to Maurice's circuit.
#This function is for a Y-plane strip. 
#We correctly predict: Ez=(n_cellsx/2.)*(n_cellsz/2.)*dx*dz=(200/2)*(400/2)*2e-8*1e-8
 Int_yInputPlane.reduced_function(x,y,z) = " (x >= -w_port/2.) * (x <= w_port/2.) * (y >= YInputPlaneLoc - dy/2.) * (y <= YInputPlaneLoc) * (z > 0.) * (z <= h_port) * 1" 

